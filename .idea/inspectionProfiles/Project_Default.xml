<component name="InspectionProjectProfileManager">
  <profile version="1.0">
    <option name="myName" value="Project Default" />
    <inspection_tool class="BooleanMethodIsAlwaysInverted" enabled="false" level="WARNING" enabled_by_default="false" />
    <inspection_tool class="HardCodedStringLiteral" enabled="false" level="WARNING" enabled_by_default="false">
      <scope name="Production" level="WARNING" enabled="false">
        <option name="ignoreForAssertStatements" value="true" />
        <option name="ignoreForExceptionConstructors" value="true" />
        <option name="ignoreForSpecifiedExceptionConstructors" value="" />
        <option name="ignoreForJUnitAsserts" value="true" />
        <option name="ignoreForClassReferences" value="true" />
        <option name="ignoreForPropertyKeyReferences" value="true" />
        <option name="ignoreForNonAlpha" value="true" />
        <option name="ignoreAssignedToConstants" value="false" />
        <option name="ignoreToString" value="true" />
        <option name="nonNlsCommentPattern" value="NON-NLS" />
      </scope>
      <option name="ignoreForAssertStatements" value="true" />
      <option name="ignoreForExceptionConstructors" value="true" />
      <option name="ignoreForSpecifiedExceptionConstructors" value="" />
      <option name="ignoreForJUnitAsserts" value="true" />
      <option name="ignoreForClassReferences" value="true" />
      <option name="ignoreForPropertyKeyReferences" value="true" />
      <option name="ignoreForNonAlpha" value="true" />
      <option name="ignoreAssignedToConstants" value="false" />
      <option name="ignoreToString" value="false" />
      <option name="nonNlsCommentPattern" value="NON-NLS" />
    </inspection_tool>
    <inspection_tool class="MissortedModifiers" enabled="true" level="WARNING" enabled_by_default="true">
      <option name="m_requireAnnotationsFirst" value="true" />
    </inspection_tool>
    <inspection_tool class="MoveVariableDeclarationIntoWhen" enabled="false" level="WEAK WARNING" enabled_by_default="false" />
    <inspection_tool class="PluginXmlI18n" enabled="true" level="WARNING" enabled_by_default="true" />
    <inspection_tool class="SSBasedInspection" enabled="true" level="WARNING" enabled_by_default="true">
      <replaceConfiguration name="IdeaVim run for each caret" description="Please use IdeaVim version of `runForEachCaret` function" suppressId="ideavimRunForEachCaret" problemDescriptor="Replace with IdeaVim version" text="$editor$.caretModel.runForEachCaret { $expr$ }" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="false" replacement="$editor$.vimForEachCaret { $expr$ }">
        <constraint name="__context__" within="" contains="" />
        <constraint name="editor" within="" contains="" />
        <constraint name="expr" minCount="0" maxCount="2147483647" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use IdeaVim method instead of the fixture" uuid="0f74da52-7360-33ae-9b40-d771aa128de6" description="Use assertState and other functions instead of myFixture.checkResult.&#10;This function also preformes assertion in neovim" suppressId="IdeaVimAssertState" problemDescriptor="Use IdeaVim testing methods" text="$fixture$.$check$($data$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="false" replacement="assertState($data$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="fixture" regexp="myFixture" nameOfExprType="CodeInsightTestFixture" within="" contains="" />
        <constraint name="check" regexp="checkResult" within="" contains="" />
        <constraint name="data" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use IdeaVim method instead of the fixture" uuid="0f74da52-7360-33ae-9b40-d771aa128de6" text="$fixture$.$check$($fileName$, $text$)" recursive="false" caseInsensitive="false" type="Kotlin" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="false" replacement="configureByText($text$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="fixture" regexp="myFixture" nameOfExprType="CodeInsightTestFixture" within="" contains="" />
        <constraint name="check" regexp="configureByText" within="" contains="" />
        <constraint name="text" within="" contains="" />
        <constraint name="fileName" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use IdeaVim method instead of the fixture" uuid="0f74da52-7360-33ae-9b40-d771aa128de6" text="$fixture$.$check$($data$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="assertState($data$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="fixture" regexp="myFixture" within="" contains="" />
        <constraint name="check" regexp="checkResult" within="" contains="" />
        <constraint name="data" within="" contains="" />
      </replaceConfiguration>
      <replaceConfiguration name="Use IdeaVim method instead of the fixture" uuid="0f74da52-7360-33ae-9b40-d771aa128de6" text="$fixture$.$configure$($first$, $second$)" recursive="false" caseInsensitive="false" type="JAVA" pattern_context="default" reformatAccordingToStyle="true" shortenFQN="true" replacement="configureByText($second$)">
        <constraint name="__context__" within="" contains="" />
        <constraint name="fixture" regexp="myFixture" within="" contains="" />
        <constraint name="configure" regexp="configureByText" within="" contains="" />
        <constraint name="first" within="" contains="" />
        <constraint name="second" within="" contains="" />
      </replaceConfiguration>
    </inspection_tool>
    <inspection_tool class="UnstableApiUsage" enabled="false" level="WARNING" enabled_by_default="false" />
  </profile>
</component>