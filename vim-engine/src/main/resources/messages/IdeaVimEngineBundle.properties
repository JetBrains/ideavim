#
# Copyright 2003-2023 The IdeaVim authors
#
# Use of this source code is governed by an MIT-style
# license that can be found in the LICENSE.txt file or at
# https://opensource.org/licenses/MIT.
#

# Vim error messages should be listed by their error number. It is easier to find them that way, because we see the
# error number while interacting with Vim, not some kind of error name.
E10=E10: \\ should be followed by /, ? or &
E15=E15: Invalid expression: "{0}"
E16=E16: Invalid range
E18=E18: Unexpected characters in :let
E20=E20: Mark not set
E33=E33: No previous substitute regular expression
E34=E34: No previous command
E35=E35: No previous regular expression
E37=E37: No write since last change (add ! to override)
E39=E39: Number expected
E43=E43: Damaged match string
E44=E44: Corrupted regexp program
E46=E46: Cannot change read-only variable "{0}"
E49=E49: Invalid scroll size: {0}
E50=E50: Too many \\z(
E51=E51: Too many {0}(
E52=E52: Unmatched \\z(
E53=E53: Unmatched {0}%(
E54=E54: Unmatched {0}(
E55=E55: Unmatched {0})
E56=E56: {0}* operand could be empty
E57=E57: {0}+ operand could be empty
E58=E58: {0}{ operand could be empty
E59=E59: invalid character after {0}@
E60=E60: Too many complex {0}{...}s
E61=E61: Nested {0}*
E62=E62: Nested {0}{1}
E63=E63: invalid use of \\_
E64=E64: {0}{1} follows nothing
E65=E65: Illegal back reference
E66=E66: \\z( not allowed here
E67=E67: \\z1 et al. not allowed here
E68=E68: Invalid character after \\z
E69=E69: Missing ] after {0}%[
E70=E70: Empty {0}%[]
E71=E71: Invalid character after {0}%
E76=E76: Too many [
E81=E81: Using <SID> not in a script context
E86=E86: Buffer {0} does not exist
E93=E93: More than one match for {0}
E94=E94: No matching buffer for {0}
E117=E117: Unknown function: {0}
E118=E118: Too many arguments for function: {0}
E119=E119: Not enough arguments for function: {0}
E120=E120: Using <SID> not in a script context: s:{0}
E121=E121: Undefined variable: {0}
E122=E122: Function {0} already exists, add ! to replace it
E125=E125: Illegal argument: {0}
E128=E128: Function name must start with a capital or "s:": {0}
E129=E129: Function name required
E130=E130: Unknown function: {0}
E146=E146: Regular expressions can''t be delimited by letters
E147=E147: Cannot do :global recursive with a range
E148=E148: Regular expression missing from global
E169=E169: Command too recursive
E174=E174: Command already exists: add ! to replace it
E176=E176: Invalid number of arguments
E183=E183: User defined commands must start with an uppercase letter
E184=E184: No such user-defined command: {0}
E191=E191: Argument must be a letter or forward/backward quote
E213=E213: Cannot convert
E223=E223: recursive mapping
E348=E348: No string under cursor
E354=E354: Invalid register name: '{0}'
E363=E363: Pattern caused out-of-stack error
E369=E369: invalid item in {0}%[]
E384=E384: Search hit TOP without match for: {0}
E385=E385: Search hit BOTTOM without match for: {0}
E418=E418: I am a teapot
E446=E446: No file name under cursor
E461=E461: Illegal variable name: {0}
E471=E471: Argument required
# Vim appends the current argument to E474 in some scenarios, such as `:set`. Don't know why it doesn't just use E475
E474=E474: Invalid argument
E474.arg=E474: Invalid argument: {0}
E475=E475: Invalid argument: {0}
E477=E477: No ! allowed
E481=E481: No range allowed
E486=E486: Pattern not found: {0}
E487=E487: Argument must be positive: {0}
E488=E488: Trailing characters: {0}
E492=E492: Not an editor command: {0}
E493=E493: Backwards range given
# Vim's message includes alternate files and the :p:h file name modifier, which we don't support
# E499: Empty file name for '%' or '#', only works with ":p:h"
E499=E499: Empty file name for '%'
E503=E503: Coffee is currently not available
E518=E518: Unknown option: {0}
E521=E521: Number required after =: {0}
E545=E545: Missing colon: {0}
E546=E546: Illegal mode: {0}
E548=E548: Digit expected: {0}
E549=E549: Illegal percentage: {0}
E586=E586: :continue without :while or :for
E587=E587: :break without :while or :for
E684=E684: List index out of range: {0,number,#0}
E687=E687: Less targets than List items
E688=E688: More targets than List items
E689=E689: Index not allowed after a {0}: {1}
E691=E691: Can only compare List with List
E692=E692: Invalid operation for List
E694=E694: Invalid operation for Funcrefs
E695=E695: Cannot index a Funcref
E700=E700: Unknown function: {0}
E701=E701: Invalid type for len()
E703=E703: Using a Funcref as a Number
E709=E709: [:] requires a List or Blob value
E710=E710: List value has more items than targets
E711=E711: List value does not have enough items
E714=E714: List required
E716=E716: Key not present in Dictionary: "{0}"
E717=E717: Dictionary entry already exists
E718=E718: Funcref required
E719=E719: Cannot slice a Dictionary
E725=E725: Calling dict function without Dictionary: {0}
E728=E728: Using a Dictionary as a Number
E729=E729: Using a Funcref as a String
E730=E730: Using a List as a String
E731=E731: Using a Dictionary as a String
E734=E734: Wrong variable type for {0}
E735=E735: Can only compare Dictionary with Dictionary
E736=E736: Invalid operation for Dictionary
E741=E741: Value is locked: {0}
E745=E745: Using a List as a Number
E774=E774: 'operatorfunc' is empty
E804=E804: Cannot use '%' with Float
E805=E805: Using a Float as a Number
E806=E806: Using a Float as a String
E808=E808: Number or Float required
E841=E841: Reserved name, cannot be used for user defined command
E884=E884: Function name cannot contain a colon: {0}
E891=E891: Using a Funcref as a Float
E892=E892: Using a String as a Float
E893=E893: Using a List as a Float
E894=E894: Using a Dictionary as a Float
E896=E896: Argument of {0} must be a List, Dictionary or Blob
E922=E922: Expected a dict
E923=E923: Second argument of function() must be a list or a dict
E933=E933: Function was deleted: {0}
E939=E939: Positive count required
E1098=E1098: String, List or Blob required
# TODO: Should be "E1203: Dot not allowed after a {0}: {1}"
E1203=E1203: Dot can only be used on a dictionary
E1211=E1211: List required for argument {0}
E1214=E1214: Digraph must be just two characters: {0}

# Messages used by a single command should begin with "command.{cmd}."
# Messages used by multiple commands should begin with "message.{area}." where "area" is a name for the group of commands
command.action.not.found=Action not found: {0}
command.action.list.header=--- Actions ---
command.global.interrupted=Interrupted
command.global.pattern.not.found=Pattern not found: {0}
command.global.pattern.found.in.every.line=Pattern found in every line: {0}
command.history.option.is.zero='history' option is zero
command.substitute.replace.with.prompt=Replace with {0} (y/n/a/q/l)?
command.substitute.trailing.characters=Trailing characters
command.substitute.zero.count=Zero count

message.command.range.required=Range required

message.search.hit.bottom=search hit BOTTOM, continuing at TOP
message.search.hit.top=search hit TOP, continuing at BOTTOM

# From openFile, used by :buffer, :edit, :find, etc.
message.open.file.not.found=Unable to find {0}

message.ex.output.more.prompt=-- MORE --
# TODO: Vim 7 changed this to "-- MORE -- SPACE/d/j: screen/page/line down, b/u/k: up, q: quit"
# However, we currently don't implement this
message.ex.output.more.prompt.full=-- MORE -- (RET: line, SPACE: page, d: half page, q: quit)
message.ex.output.end.prompt=Hit ENTER or type command to continue
